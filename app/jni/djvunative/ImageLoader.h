/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <vector>
#include <tuple>
#include <map>
#include <opencv2/core/core.hpp>

using namespace cv;
using namespace std;
/* Header for class com_example_sergey_djvu_viewer_ImageLoader */

#ifndef _Included_com_example_sergey_djvu_viewer_ImageLoader
#define _Included_com_example_sergey_djvu_viewer_ImageLoader
#ifdef __cplusplus
extern "C" {
#endif

JNIEXPORT jobject JNICALL Java_com_veve_flowreader_model_impl_djvu_DjvuBookPage_getBytes
(JNIEnv *, jclass, jlong, jint);

JNIEXPORT jlong JNICALL Java_com_veve_flowreader_model_impl_djvu_DjvuBook_openBook
(JNIEnv *, jobject, jstring);

JNIEXPORT jint JNICALL Java_com_veve_flowreader_model_impl_djvu_DjvuBook_getNumberOfPages
        (JNIEnv *, jobject, jlong);

JNIEXPORT jstring JNICALL Java_com_veve_flowreader_model_impl_djvu_DjvuBook_openStringBook
        (JNIEnv *, jobject,  jstring);

/*
* Class:     com_veve_flowreader_model_impl_djvu_DjvuBookPage
* Method:    getNativeWidth
* Signature: (JI)I
*/
JNIEXPORT jint JNICALL Java_com_veve_flowreader_model_impl_djvu_DjvuBookPage_getNativeWidth
        (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_veve_flowreader_model_impl_djvu_DjvuBookPage
 * Method:    getNativeHeight
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_com_veve_flowreader_model_impl_djvu_DjvuBookPage_getNativeHeight
        (JNIEnv *, jclass, jlong, jint);

#ifdef __cplusplus
}

struct glyph {
    int x, y, width, height;
};

struct line_limit {
    int upper, upper_baseline, lower, lower_baseline;
};

struct cc_result {
    int** centers;
    double  average_hight;
    map<tuple<double,double>,Rect> rd;
};

class PageSegmenter {

public:
    PageSegmenter(Mat& mat) {
        this->mat = mat;
    }

    vector<glyph> get_glyphs();

private:
    Mat mat;
    vector<line_limit> get_line_limits();
    vector<cc_result> get_cc_results(Mat& image);
};




#endif
#endif
